name: CD to Cloud Run (API, all secrets)

on:
    push:
        branches: [main]

permissions:
    contents: read
    id-token: write

env:
    REGION: asia-northeast1
    SERVICE_NAME: backend
    REGISTRY: asia-northeast1-docker.pkg.dev/stock-app-473503/stock-registry
    IMAGE_TAG: ${{ github.sha }}
    DOCKERFILE_PATH: Dockerfile.server
    BUILD_CONTEXT: .
    RUNTIME_SERVICE_ACCOUNT: cr-service-runner@stock-app-473503.iam.gserviceaccount.com

jobs:
    deploy-api:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Auth to Google Cloud (OIDC/WIF)
              uses: google-github-actions/auth@v2
              with:
                  workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
                  service_account: ${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}

            - name: Setup gcloud
              uses: google-github-actions/setup-gcloud@v2
              with:
                  project_id: ${{ secrets.GCP_PROJECT_ID }}

            - name: Configure Docker for Artifact Registry
              run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

            - name: Build and push Docker image
              run: |
                  set -euo pipefail
                  IMAGE=${{ env.REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG }}
                  DOCKER_BUILDKIT=1 docker build -t "$IMAGE" -f "${{ env.DOCKERFILE_PATH }}" "${{ env.BUILD_CONTEXT }}"
                  docker push "$IMAGE"
                  echo "IMAGE=$IMAGE" >> $GITHUB_ENV

            - name: Deploy (create or update)
              run: |
                  set -euo pipefail
                  if gcloud run services describe "${{ env.SERVICE_NAME }}" --region "${{ env.REGION }}" >/dev/null 2>&1; then
                    EXTRA="--no-traffic"
                  else
                    EXTRA=""
                  fi

                  gcloud run deploy "${{ env.SERVICE_NAME }}" \
                    --image "$IMAGE" \
                    --region "${{ env.REGION }}" \
                    --platform managed \
                    --allow-unauthenticated \
                    --service-account "${{ env.RUNTIME_SERVICE_ACCOUNT }}" \
                    --add-cloudsql-instances "${{ secrets.INSTANCE_CONNECTION_NAME_FOR_DEPLOY }}" \
                    --vpc-connector run-connector \
                    --vpc-egress private-ranges-only \
                    --set-secrets JWT_SECRET=JWT_SECRET:latest,TWELVE_DATA_API_KEY=TWELVE_DATA_API_KEY:latest,TWELVE_DATA_BASE_URL=TWELVE_DATA_BASE_URL:latest,DB_USER=DB_USER:latest,DB_PASSWORD=DB_PASSWORD:latest,DB_NAME=DB_NAME:latest,INSTANCE_CONNECTION_NAME=INSTANCE_CONNECTION_NAME:latest,RUN_MIGRATIONS=RUN_MIGRATIONS:latest,REDIS_HOST=REDIS_HOST:latest,REDIS_PORT=REDIS_PORT:latest,REDIS_PASSWORD=REDIS_PASSWORD:latest \
                    $EXTRA \
                    --quiet

            - name: Shift traffic to latest
              run: |
                  gcloud run services update-traffic "${{ env.SERVICE_NAME }}" \
                    --region "${{ env.REGION }}" \
                    --to-latest \
                    --quiet
